// Code generated by protoc-gen-go. DO NOT EDIT.
// source: console/console.proto

package console

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
import api "github.com/heroiclabs/nakama/api"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// *
// Deletion request for a user account.
type AccountDeleteRequest struct {
	// The unique identifier of the user account.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Record the user deletion - used for GDPR compliance.
	RecordDeletion       *wrappers.BoolValue `protobuf:"bytes,2,opt,name=record_deletion,json=recordDeletion,proto3" json:"record_deletion,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *AccountDeleteRequest) Reset()         { *m = AccountDeleteRequest{} }
func (m *AccountDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*AccountDeleteRequest) ProtoMessage()    {}
func (*AccountDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_console_32b59101dd0e179e, []int{0}
}
func (m *AccountDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountDeleteRequest.Unmarshal(m, b)
}
func (m *AccountDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountDeleteRequest.Marshal(b, m, deterministic)
}
func (dst *AccountDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountDeleteRequest.Merge(dst, src)
}
func (m *AccountDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_AccountDeleteRequest.Size(m)
}
func (m *AccountDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AccountDeleteRequest proto.InternalMessageInfo

func (m *AccountDeleteRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AccountDeleteRequest) GetRecordDeletion() *wrappers.BoolValue {
	if m != nil {
		return m.RecordDeletion
	}
	return nil
}

// *
// An export of all information stored for a user account.
type AccountExport struct {
	// The user's account details.
	Account *api.Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// The user's storage.
	Objects []*api.StorageObject `protobuf:"bytes,2,rep,name=objects,proto3" json:"objects,omitempty"`
	// The user's friends.
	Friends []*api.Friend `protobuf:"bytes,3,rep,name=friends,proto3" json:"friends,omitempty"`
	// The user's groups.
	Groups []*api.Group `protobuf:"bytes,4,rep,name=groups,proto3" json:"groups,omitempty"`
	// The user's chat messages.
	Messages []*api.ChannelMessage `protobuf:"bytes,5,rep,name=messages,proto3" json:"messages,omitempty"`
	// The user's leaderboard records.
	LeaderboardRecords []*api.LeaderboardRecord `protobuf:"bytes,6,rep,name=leaderboard_records,json=leaderboardRecords,proto3" json:"leaderboard_records,omitempty"`
	// The user's notifications.
	Notifications []*api.Notification `protobuf:"bytes,7,rep,name=notifications,proto3" json:"notifications,omitempty"`
	// The user's wallet ledger items.
	WalletLedgers        []*WalletLedger `protobuf:"bytes,8,rep,name=wallet_ledgers,json=walletLedgers,proto3" json:"wallet_ledgers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AccountExport) Reset()         { *m = AccountExport{} }
func (m *AccountExport) String() string { return proto.CompactTextString(m) }
func (*AccountExport) ProtoMessage()    {}
func (*AccountExport) Descriptor() ([]byte, []int) {
	return fileDescriptor_console_32b59101dd0e179e, []int{1}
}
func (m *AccountExport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountExport.Unmarshal(m, b)
}
func (m *AccountExport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountExport.Marshal(b, m, deterministic)
}
func (dst *AccountExport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountExport.Merge(dst, src)
}
func (m *AccountExport) XXX_Size() int {
	return xxx_messageInfo_AccountExport.Size(m)
}
func (m *AccountExport) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountExport.DiscardUnknown(m)
}

var xxx_messageInfo_AccountExport proto.InternalMessageInfo

func (m *AccountExport) GetAccount() *api.Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *AccountExport) GetObjects() []*api.StorageObject {
	if m != nil {
		return m.Objects
	}
	return nil
}

func (m *AccountExport) GetFriends() []*api.Friend {
	if m != nil {
		return m.Friends
	}
	return nil
}

func (m *AccountExport) GetGroups() []*api.Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *AccountExport) GetMessages() []*api.ChannelMessage {
	if m != nil {
		return m.Messages
	}
	return nil
}

func (m *AccountExport) GetLeaderboardRecords() []*api.LeaderboardRecord {
	if m != nil {
		return m.LeaderboardRecords
	}
	return nil
}

func (m *AccountExport) GetNotifications() []*api.Notification {
	if m != nil {
		return m.Notifications
	}
	return nil
}

func (m *AccountExport) GetWalletLedgers() []*WalletLedger {
	if m != nil {
		return m.WalletLedgers
	}
	return nil
}

// *
// The identifier for a user account.
type AccountIdRequest struct {
	// The unique identifier of the user account.
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountIdRequest) Reset()         { *m = AccountIdRequest{} }
func (m *AccountIdRequest) String() string { return proto.CompactTextString(m) }
func (*AccountIdRequest) ProtoMessage()    {}
func (*AccountIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_console_32b59101dd0e179e, []int{2}
}
func (m *AccountIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountIdRequest.Unmarshal(m, b)
}
func (m *AccountIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountIdRequest.Marshal(b, m, deterministic)
}
func (dst *AccountIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountIdRequest.Merge(dst, src)
}
func (m *AccountIdRequest) XXX_Size() int {
	return xxx_messageInfo_AccountIdRequest.Size(m)
}
func (m *AccountIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AccountIdRequest proto.InternalMessageInfo

func (m *AccountIdRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// *
// Get the recent list of accounts.
type AccountList struct {
	Accounts             []*api.Account `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *AccountList) Reset()         { *m = AccountList{} }
func (m *AccountList) String() string { return proto.CompactTextString(m) }
func (*AccountList) ProtoMessage()    {}
func (*AccountList) Descriptor() ([]byte, []int) {
	return fileDescriptor_console_32b59101dd0e179e, []int{3}
}
func (m *AccountList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountList.Unmarshal(m, b)
}
func (m *AccountList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountList.Marshal(b, m, deterministic)
}
func (dst *AccountList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountList.Merge(dst, src)
}
func (m *AccountList) XXX_Size() int {
	return xxx_messageInfo_AccountList.Size(m)
}
func (m *AccountList) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountList.DiscardUnknown(m)
}

var xxx_messageInfo_AccountList proto.InternalMessageInfo

func (m *AccountList) GetAccounts() []*api.Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

// *
// Authenticate against the server with username+password.
type AuthenticateRequest struct {
	// The username of the user.
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// The password of the user.
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthenticateRequest) Reset()         { *m = AuthenticateRequest{} }
func (m *AuthenticateRequest) String() string { return proto.CompactTextString(m) }
func (*AuthenticateRequest) ProtoMessage()    {}
func (*AuthenticateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_console_32b59101dd0e179e, []int{4}
}
func (m *AuthenticateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthenticateRequest.Unmarshal(m, b)
}
func (m *AuthenticateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthenticateRequest.Marshal(b, m, deterministic)
}
func (dst *AuthenticateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthenticateRequest.Merge(dst, src)
}
func (m *AuthenticateRequest) XXX_Size() int {
	return xxx_messageInfo_AuthenticateRequest.Size(m)
}
func (m *AuthenticateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthenticateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthenticateRequest proto.InternalMessageInfo

func (m *AuthenticateRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AuthenticateRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// Delete a storage object.
type DeleteStorageObjectRequest struct {
	// The collection which stores the object.
	Collection string `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	// The key of the object within the collection.
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// ID of the user that this object belongs to.
	UserId               string   `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteStorageObjectRequest) Reset()         { *m = DeleteStorageObjectRequest{} }
func (m *DeleteStorageObjectRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteStorageObjectRequest) ProtoMessage()    {}
func (*DeleteStorageObjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_console_32b59101dd0e179e, []int{5}
}
func (m *DeleteStorageObjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteStorageObjectRequest.Unmarshal(m, b)
}
func (m *DeleteStorageObjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteStorageObjectRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteStorageObjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteStorageObjectRequest.Merge(dst, src)
}
func (m *DeleteStorageObjectRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteStorageObjectRequest.Size(m)
}
func (m *DeleteStorageObjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteStorageObjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteStorageObjectRequest proto.InternalMessageInfo

func (m *DeleteStorageObjectRequest) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

func (m *DeleteStorageObjectRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *DeleteStorageObjectRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

// Retrieve a storage object.
type GetStorageObjectRequest struct {
	// The collection which stores the object.
	Collection string `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	// The key of the object within the collection.
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// The user owner of the object.
	UserId               string   `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStorageObjectRequest) Reset()         { *m = GetStorageObjectRequest{} }
func (m *GetStorageObjectRequest) String() string { return proto.CompactTextString(m) }
func (*GetStorageObjectRequest) ProtoMessage()    {}
func (*GetStorageObjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_console_32b59101dd0e179e, []int{6}
}
func (m *GetStorageObjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStorageObjectRequest.Unmarshal(m, b)
}
func (m *GetStorageObjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStorageObjectRequest.Marshal(b, m, deterministic)
}
func (dst *GetStorageObjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStorageObjectRequest.Merge(dst, src)
}
func (m *GetStorageObjectRequest) XXX_Size() int {
	return xxx_messageInfo_GetStorageObjectRequest.Size(m)
}
func (m *GetStorageObjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStorageObjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetStorageObjectRequest proto.InternalMessageInfo

func (m *GetStorageObjectRequest) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

func (m *GetStorageObjectRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *GetStorageObjectRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

// List object belonging to a user and/or a collection.
type ListStorageObjectRequest struct {
	// The collection which stores the object.
	Collection string `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	// ID of the user that this object belongs to.
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The cursor to page through results from.
	Cursor               string   `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListStorageObjectRequest) Reset()         { *m = ListStorageObjectRequest{} }
func (m *ListStorageObjectRequest) String() string { return proto.CompactTextString(m) }
func (*ListStorageObjectRequest) ProtoMessage()    {}
func (*ListStorageObjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_console_32b59101dd0e179e, []int{7}
}
func (m *ListStorageObjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListStorageObjectRequest.Unmarshal(m, b)
}
func (m *ListStorageObjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListStorageObjectRequest.Marshal(b, m, deterministic)
}
func (dst *ListStorageObjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListStorageObjectRequest.Merge(dst, src)
}
func (m *ListStorageObjectRequest) XXX_Size() int {
	return xxx_messageInfo_ListStorageObjectRequest.Size(m)
}
func (m *ListStorageObjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListStorageObjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListStorageObjectRequest proto.InternalMessageInfo

func (m *ListStorageObjectRequest) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

func (m *ListStorageObjectRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ListStorageObjectRequest) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

// *
// List of collections available in storage.
type StorageCollectionList struct {
	// Storage collections.
	Collections          []string `protobuf:"bytes,1,rep,name=collections,proto3" json:"collections,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StorageCollectionList) Reset()         { *m = StorageCollectionList{} }
func (m *StorageCollectionList) String() string { return proto.CompactTextString(m) }
func (*StorageCollectionList) ProtoMessage()    {}
func (*StorageCollectionList) Descriptor() ([]byte, []int) {
	return fileDescriptor_console_32b59101dd0e179e, []int{8}
}
func (m *StorageCollectionList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageCollectionList.Unmarshal(m, b)
}
func (m *StorageCollectionList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageCollectionList.Marshal(b, m, deterministic)
}
func (dst *StorageCollectionList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageCollectionList.Merge(dst, src)
}
func (m *StorageCollectionList) XXX_Size() int {
	return xxx_messageInfo_StorageCollectionList.Size(m)
}
func (m *StorageCollectionList) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageCollectionList.DiscardUnknown(m)
}

var xxx_messageInfo_StorageCollectionList proto.InternalMessageInfo

func (m *StorageCollectionList) GetCollections() []string {
	if m != nil {
		return m.Collections
	}
	return nil
}

// A storage record.
type StorageObject struct {
	// The collection to store the object.
	Collection string `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	// The key for the object within the collection.
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// ID of the user that this object belongs to.
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The value of the object.
	Value string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	// The read access permissions for the object.
	PermissionRead int32 `protobuf:"varint,5,opt,name=permission_read,json=permissionRead,proto3" json:"permission_read,omitempty"`
	// The write access permissions for the object.
	PermissionWrite      int32    `protobuf:"varint,6,opt,name=permission_write,json=permissionWrite,proto3" json:"permission_write,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StorageObject) Reset()         { *m = StorageObject{} }
func (m *StorageObject) String() string { return proto.CompactTextString(m) }
func (*StorageObject) ProtoMessage()    {}
func (*StorageObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_console_32b59101dd0e179e, []int{9}
}
func (m *StorageObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageObject.Unmarshal(m, b)
}
func (m *StorageObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageObject.Marshal(b, m, deterministic)
}
func (dst *StorageObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageObject.Merge(dst, src)
}
func (m *StorageObject) XXX_Size() int {
	return xxx_messageInfo_StorageObject.Size(m)
}
func (m *StorageObject) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageObject.DiscardUnknown(m)
}

var xxx_messageInfo_StorageObject proto.InternalMessageInfo

func (m *StorageObject) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

func (m *StorageObject) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *StorageObject) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *StorageObject) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *StorageObject) GetPermissionRead() int32 {
	if m != nil {
		return m.PermissionRead
	}
	return 0
}

func (m *StorageObject) GetPermissionWrite() int32 {
	if m != nil {
		return m.PermissionWrite
	}
	return 0
}

// *
// List of objects in a given collection.
type StorageObjectList struct {
	// The list of storage objects.
	Objects []*StorageObject `protobuf:"bytes,1,rep,name=objects,proto3" json:"objects,omitempty"`
	// The cursor associated with the query a page of results.
	Cursor               string   `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StorageObjectList) Reset()         { *m = StorageObjectList{} }
func (m *StorageObjectList) String() string { return proto.CompactTextString(m) }
func (*StorageObjectList) ProtoMessage()    {}
func (*StorageObjectList) Descriptor() ([]byte, []int) {
	return fileDescriptor_console_32b59101dd0e179e, []int{10}
}
func (m *StorageObjectList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageObjectList.Unmarshal(m, b)
}
func (m *StorageObjectList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageObjectList.Marshal(b, m, deterministic)
}
func (dst *StorageObjectList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageObjectList.Merge(dst, src)
}
func (m *StorageObjectList) XXX_Size() int {
	return xxx_messageInfo_StorageObjectList.Size(m)
}
func (m *StorageObjectList) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageObjectList.DiscardUnknown(m)
}

var xxx_messageInfo_StorageObjectList proto.InternalMessageInfo

func (m *StorageObjectList) GetObjects() []*StorageObject {
	if m != nil {
		return m.Objects
	}
	return nil
}

func (m *StorageObjectList) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

// *
// A wallet ledger item representing a change to the user's wallet.
type WalletLedger struct {
	// The unique ID of the change.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The user ID this change belongs to.
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The changes to the wallet.
	Changeset string `protobuf:"bytes,3,opt,name=changeset,proto3" json:"changeset,omitempty"`
	// Metadata.
	Metadata string `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// The UNIX time when the wallet ledger item was created.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The UNIX time when the wallet ledger item was updated.
	UpdateTime           *timestamp.Timestamp `protobuf:"bytes,9,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *WalletLedger) Reset()         { *m = WalletLedger{} }
func (m *WalletLedger) String() string { return proto.CompactTextString(m) }
func (*WalletLedger) ProtoMessage()    {}
func (*WalletLedger) Descriptor() ([]byte, []int) {
	return fileDescriptor_console_32b59101dd0e179e, []int{11}
}
func (m *WalletLedger) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalletLedger.Unmarshal(m, b)
}
func (m *WalletLedger) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalletLedger.Marshal(b, m, deterministic)
}
func (dst *WalletLedger) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalletLedger.Merge(dst, src)
}
func (m *WalletLedger) XXX_Size() int {
	return xxx_messageInfo_WalletLedger.Size(m)
}
func (m *WalletLedger) XXX_DiscardUnknown() {
	xxx_messageInfo_WalletLedger.DiscardUnknown(m)
}

var xxx_messageInfo_WalletLedger proto.InternalMessageInfo

func (m *WalletLedger) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *WalletLedger) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *WalletLedger) GetChangeset() string {
	if m != nil {
		return m.Changeset
	}
	return ""
}

func (m *WalletLedger) GetMetadata() string {
	if m != nil {
		return m.Metadata
	}
	return ""
}

func (m *WalletLedger) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *WalletLedger) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

// Write an object to storage.
type WriteStorageObjectRequest struct {
	Object               *StorageObject `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *WriteStorageObjectRequest) Reset()         { *m = WriteStorageObjectRequest{} }
func (m *WriteStorageObjectRequest) String() string { return proto.CompactTextString(m) }
func (*WriteStorageObjectRequest) ProtoMessage()    {}
func (*WriteStorageObjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_console_32b59101dd0e179e, []int{12}
}
func (m *WriteStorageObjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteStorageObjectRequest.Unmarshal(m, b)
}
func (m *WriteStorageObjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteStorageObjectRequest.Marshal(b, m, deterministic)
}
func (dst *WriteStorageObjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteStorageObjectRequest.Merge(dst, src)
}
func (m *WriteStorageObjectRequest) XXX_Size() int {
	return xxx_messageInfo_WriteStorageObjectRequest.Size(m)
}
func (m *WriteStorageObjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteStorageObjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteStorageObjectRequest proto.InternalMessageInfo

func (m *WriteStorageObjectRequest) GetObject() *StorageObject {
	if m != nil {
		return m.Object
	}
	return nil
}

func init() {
	proto.RegisterType((*AccountDeleteRequest)(nil), "nakama.console.AccountDeleteRequest")
	proto.RegisterType((*AccountExport)(nil), "nakama.console.AccountExport")
	proto.RegisterType((*AccountIdRequest)(nil), "nakama.console.AccountIdRequest")
	proto.RegisterType((*AccountList)(nil), "nakama.console.AccountList")
	proto.RegisterType((*AuthenticateRequest)(nil), "nakama.console.AuthenticateRequest")
	proto.RegisterType((*DeleteStorageObjectRequest)(nil), "nakama.console.DeleteStorageObjectRequest")
	proto.RegisterType((*GetStorageObjectRequest)(nil), "nakama.console.GetStorageObjectRequest")
	proto.RegisterType((*ListStorageObjectRequest)(nil), "nakama.console.ListStorageObjectRequest")
	proto.RegisterType((*StorageCollectionList)(nil), "nakama.console.StorageCollectionList")
	proto.RegisterType((*StorageObject)(nil), "nakama.console.StorageObject")
	proto.RegisterType((*StorageObjectList)(nil), "nakama.console.StorageObjectList")
	proto.RegisterType((*WalletLedger)(nil), "nakama.console.WalletLedger")
	proto.RegisterType((*WriteStorageObjectRequest)(nil), "nakama.console.WriteStorageObjectRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConsoleClient is the client API for Console service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConsoleClient interface {
	// Authenticate a user with username+password.
	Login(ctx context.Context, in *AuthenticateRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Delete all information stored for a user account.
	DeleteAccount(ctx context.Context, in *AccountDeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Delete all accounts.
	DeleteAccounts(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	// Delete a storage object.
	DeleteStorageObject(ctx context.Context, in *DeleteStorageObjectRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Delete all storage objects.
	DeleteStorageObjects(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	// Export all information stored about a user account.
	ExportAccount(ctx context.Context, in *AccountIdRequest, opts ...grpc.CallOption) (*AccountExport, error)
	// Get info about a particular account
	GetAccount(ctx context.Context, in *AccountIdRequest, opts ...grpc.CallOption) (*api.Account, error)
	// Get a storage object
	GetStorage(ctx context.Context, in *GetStorageObjectRequest, opts ...grpc.CallOption) (*StorageObject, error)
	// List all recent accounts.
	ListAccounts(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*AccountList, error)
	// List friends for a particular account.
	ListFriends(ctx context.Context, in *AccountIdRequest, opts ...grpc.CallOption) (*api.Friends, error)
	// List groups a particular belongs account to.
	ListGroups(ctx context.Context, in *AccountIdRequest, opts ...grpc.CallOption) (*api.UserGroupList, error)
	// List all storage collections.
	ListStorageCollections(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*StorageCollectionList, error)
	// List storage objects in a given collection.
	ListStorageObjects(ctx context.Context, in *ListStorageObjectRequest, opts ...grpc.CallOption) (*StorageObjectList, error)
	// Create or overwrite a storage object.
	WriteStorageObject(ctx context.Context, in *WriteStorageObjectRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type consoleClient struct {
	cc *grpc.ClientConn
}

func NewConsoleClient(cc *grpc.ClientConn) ConsoleClient {
	return &consoleClient{cc}
}

func (c *consoleClient) Login(ctx context.Context, in *AuthenticateRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/nakama.console.Console/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consoleClient) DeleteAccount(ctx context.Context, in *AccountDeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/nakama.console.Console/DeleteAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consoleClient) DeleteAccounts(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/nakama.console.Console/DeleteAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consoleClient) DeleteStorageObject(ctx context.Context, in *DeleteStorageObjectRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/nakama.console.Console/DeleteStorageObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consoleClient) DeleteStorageObjects(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/nakama.console.Console/DeleteStorageObjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consoleClient) ExportAccount(ctx context.Context, in *AccountIdRequest, opts ...grpc.CallOption) (*AccountExport, error) {
	out := new(AccountExport)
	err := c.cc.Invoke(ctx, "/nakama.console.Console/ExportAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consoleClient) GetAccount(ctx context.Context, in *AccountIdRequest, opts ...grpc.CallOption) (*api.Account, error) {
	out := new(api.Account)
	err := c.cc.Invoke(ctx, "/nakama.console.Console/GetAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consoleClient) GetStorage(ctx context.Context, in *GetStorageObjectRequest, opts ...grpc.CallOption) (*StorageObject, error) {
	out := new(StorageObject)
	err := c.cc.Invoke(ctx, "/nakama.console.Console/GetStorage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consoleClient) ListAccounts(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*AccountList, error) {
	out := new(AccountList)
	err := c.cc.Invoke(ctx, "/nakama.console.Console/ListAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consoleClient) ListFriends(ctx context.Context, in *AccountIdRequest, opts ...grpc.CallOption) (*api.Friends, error) {
	out := new(api.Friends)
	err := c.cc.Invoke(ctx, "/nakama.console.Console/ListFriends", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consoleClient) ListGroups(ctx context.Context, in *AccountIdRequest, opts ...grpc.CallOption) (*api.UserGroupList, error) {
	out := new(api.UserGroupList)
	err := c.cc.Invoke(ctx, "/nakama.console.Console/ListGroups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consoleClient) ListStorageCollections(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*StorageCollectionList, error) {
	out := new(StorageCollectionList)
	err := c.cc.Invoke(ctx, "/nakama.console.Console/ListStorageCollections", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consoleClient) ListStorageObjects(ctx context.Context, in *ListStorageObjectRequest, opts ...grpc.CallOption) (*StorageObjectList, error) {
	out := new(StorageObjectList)
	err := c.cc.Invoke(ctx, "/nakama.console.Console/ListStorageObjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consoleClient) WriteStorageObject(ctx context.Context, in *WriteStorageObjectRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/nakama.console.Console/WriteStorageObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConsoleServer is the server API for Console service.
type ConsoleServer interface {
	// Authenticate a user with username+password.
	Login(context.Context, *AuthenticateRequest) (*empty.Empty, error)
	// Delete all information stored for a user account.
	DeleteAccount(context.Context, *AccountDeleteRequest) (*empty.Empty, error)
	// Delete all accounts.
	DeleteAccounts(context.Context, *empty.Empty) (*empty.Empty, error)
	// Delete a storage object.
	DeleteStorageObject(context.Context, *DeleteStorageObjectRequest) (*empty.Empty, error)
	// Delete all storage objects.
	DeleteStorageObjects(context.Context, *empty.Empty) (*empty.Empty, error)
	// Export all information stored about a user account.
	ExportAccount(context.Context, *AccountIdRequest) (*AccountExport, error)
	// Get info about a particular account
	GetAccount(context.Context, *AccountIdRequest) (*api.Account, error)
	// Get a storage object
	GetStorage(context.Context, *GetStorageObjectRequest) (*StorageObject, error)
	// List all recent accounts.
	ListAccounts(context.Context, *empty.Empty) (*AccountList, error)
	// List friends for a particular account.
	ListFriends(context.Context, *AccountIdRequest) (*api.Friends, error)
	// List groups a particular belongs account to.
	ListGroups(context.Context, *AccountIdRequest) (*api.UserGroupList, error)
	// List all storage collections.
	ListStorageCollections(context.Context, *empty.Empty) (*StorageCollectionList, error)
	// List storage objects in a given collection.
	ListStorageObjects(context.Context, *ListStorageObjectRequest) (*StorageObjectList, error)
	// Create or overwrite a storage object.
	WriteStorageObject(context.Context, *WriteStorageObjectRequest) (*empty.Empty, error)
}

func RegisterConsoleServer(s *grpc.Server, srv ConsoleServer) {
	s.RegisterService(&_Console_serviceDesc, srv)
}

func _Console_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthenticateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsoleServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nakama.console.Console/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsoleServer).Login(ctx, req.(*AuthenticateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Console_DeleteAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsoleServer).DeleteAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nakama.console.Console/DeleteAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsoleServer).DeleteAccount(ctx, req.(*AccountDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Console_DeleteAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsoleServer).DeleteAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nakama.console.Console/DeleteAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsoleServer).DeleteAccounts(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Console_DeleteStorageObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteStorageObjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsoleServer).DeleteStorageObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nakama.console.Console/DeleteStorageObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsoleServer).DeleteStorageObject(ctx, req.(*DeleteStorageObjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Console_DeleteStorageObjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsoleServer).DeleteStorageObjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nakama.console.Console/DeleteStorageObjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsoleServer).DeleteStorageObjects(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Console_ExportAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsoleServer).ExportAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nakama.console.Console/ExportAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsoleServer).ExportAccount(ctx, req.(*AccountIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Console_GetAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsoleServer).GetAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nakama.console.Console/GetAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsoleServer).GetAccount(ctx, req.(*AccountIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Console_GetStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStorageObjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsoleServer).GetStorage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nakama.console.Console/GetStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsoleServer).GetStorage(ctx, req.(*GetStorageObjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Console_ListAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsoleServer).ListAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nakama.console.Console/ListAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsoleServer).ListAccounts(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Console_ListFriends_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsoleServer).ListFriends(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nakama.console.Console/ListFriends",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsoleServer).ListFriends(ctx, req.(*AccountIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Console_ListGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsoleServer).ListGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nakama.console.Console/ListGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsoleServer).ListGroups(ctx, req.(*AccountIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Console_ListStorageCollections_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsoleServer).ListStorageCollections(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nakama.console.Console/ListStorageCollections",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsoleServer).ListStorageCollections(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Console_ListStorageObjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListStorageObjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsoleServer).ListStorageObjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nakama.console.Console/ListStorageObjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsoleServer).ListStorageObjects(ctx, req.(*ListStorageObjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Console_WriteStorageObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteStorageObjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsoleServer).WriteStorageObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nakama.console.Console/WriteStorageObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsoleServer).WriteStorageObject(ctx, req.(*WriteStorageObjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Console_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nakama.console.Console",
	HandlerType: (*ConsoleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _Console_Login_Handler,
		},
		{
			MethodName: "DeleteAccount",
			Handler:    _Console_DeleteAccount_Handler,
		},
		{
			MethodName: "DeleteAccounts",
			Handler:    _Console_DeleteAccounts_Handler,
		},
		{
			MethodName: "DeleteStorageObject",
			Handler:    _Console_DeleteStorageObject_Handler,
		},
		{
			MethodName: "DeleteStorageObjects",
			Handler:    _Console_DeleteStorageObjects_Handler,
		},
		{
			MethodName: "ExportAccount",
			Handler:    _Console_ExportAccount_Handler,
		},
		{
			MethodName: "GetAccount",
			Handler:    _Console_GetAccount_Handler,
		},
		{
			MethodName: "GetStorage",
			Handler:    _Console_GetStorage_Handler,
		},
		{
			MethodName: "ListAccounts",
			Handler:    _Console_ListAccounts_Handler,
		},
		{
			MethodName: "ListFriends",
			Handler:    _Console_ListFriends_Handler,
		},
		{
			MethodName: "ListGroups",
			Handler:    _Console_ListGroups_Handler,
		},
		{
			MethodName: "ListStorageCollections",
			Handler:    _Console_ListStorageCollections_Handler,
		},
		{
			MethodName: "ListStorageObjects",
			Handler:    _Console_ListStorageObjects_Handler,
		},
		{
			MethodName: "WriteStorageObject",
			Handler:    _Console_WriteStorageObject_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "console/console.proto",
}

func init() { proto.RegisterFile("console/console.proto", fileDescriptor_console_32b59101dd0e179e) }

var fileDescriptor_console_32b59101dd0e179e = []byte{
	// 1378 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0xdf, 0x6e, 0xd4, 0x46,
	0x17, 0xc7, 0x1b, 0xb2, 0x49, 0xce, 0xb2, 0x9b, 0x30, 0x49, 0xc0, 0x38, 0xfc, 0x31, 0x86, 0xef,
	0x23, 0xac, 0xc0, 0x0e, 0x8b, 0xf8, 0xf8, 0x9a, 0x4a, 0xa8, 0x49, 0x80, 0x08, 0x29, 0x50, 0xe4,
	0x52, 0x90, 0x90, 0xaa, 0xed, 0xac, 0x3d, 0xec, 0x9a, 0x78, 0x3d, 0xee, 0xcc, 0x6c, 0xd2, 0x28,
	0xca, 0x4d, 0x1f, 0xa0, 0x17, 0x70, 0xdf, 0x17, 0xe0, 0x09, 0x7a, 0xdf, 0x37, 0xe8, 0x55, 0xef,
	0x7b, 0xd7, 0x97, 0xa8, 0x3c, 0x1e, 0xef, 0x7a, 0xff, 0x98, 0x15, 0x15, 0xbd, 0x88, 0x36, 0x73,
	0xe6, 0x77, 0xce, 0x6f, 0xe6, 0x9c, 0x33, 0xe7, 0x1c, 0xc3, 0xaa, 0x47, 0x23, 0x4e, 0x43, 0xe2,
	0xa8, 0x5f, 0x3b, 0x66, 0x54, 0x50, 0x54, 0x8b, 0xf0, 0x3e, 0xee, 0x62, 0x5b, 0x49, 0x8d, 0x7a,
	0x3b, 0x10, 0x9d, 0x5e, 0xcb, 0xf6, 0x68, 0xd7, 0xe9, 0x10, 0x46, 0x03, 0x2f, 0xc4, 0x2d, 0xee,
	0xa4, 0x28, 0x07, 0xc7, 0x41, 0xf2, 0x97, 0xea, 0x1a, 0x17, 0xdb, 0x94, 0xb6, 0x43, 0x92, 0x4a,
	0xa3, 0x88, 0x0a, 0x2c, 0x02, 0x1a, 0x71, 0xb5, 0xbb, 0xa6, 0x76, 0xe5, 0xaa, 0xd5, 0x7b, 0xe3,
	0x90, 0x6e, 0x2c, 0x8e, 0xd4, 0xe6, 0x95, 0xd1, 0x4d, 0x11, 0x74, 0x09, 0x17, 0xb8, 0x1b, 0x2b,
	0xc0, 0xe5, 0x51, 0xc0, 0x21, 0xc3, 0x71, 0x4c, 0x58, 0x66, 0xfd, 0x96, 0xfc, 0xf1, 0x6e, 0xb7,
	0x49, 0x74, 0x9b, 0x1f, 0xe2, 0x76, 0x9b, 0x30, 0x87, 0xc6, 0x92, 0x7f, 0xfc, 0x2c, 0xd6, 0x3e,
	0xac, 0x6c, 0x79, 0x1e, 0xed, 0x45, 0xe2, 0x21, 0x09, 0x89, 0x20, 0x2e, 0xf9, 0xa1, 0x47, 0xb8,
	0x40, 0x35, 0x28, 0x05, 0xbe, 0xae, 0x99, 0xda, 0xfa, 0x82, 0x5b, 0x0a, 0x7c, 0xb4, 0x03, 0x8b,
	0x8c, 0x78, 0x94, 0xf9, 0x4d, 0x3f, 0xc1, 0x05, 0x34, 0xd2, 0x4b, 0xa6, 0xb6, 0x5e, 0x69, 0x18,
	0x76, 0x7a, 0x1e, 0x3b, 0x3b, 0x8f, 0xbd, 0x4d, 0x69, 0xf8, 0x12, 0x87, 0x3d, 0xe2, 0xd6, 0x52,
	0x95, 0x87, 0x4a, 0xc3, 0xfa, 0x63, 0x06, 0xaa, 0x8a, 0xed, 0xd1, 0x8f, 0x31, 0x65, 0x02, 0xdd,
	0x86, 0x39, 0x9c, 0x0a, 0x24, 0x57, 0xa5, 0xb1, 0x6c, 0x2b, 0xb7, 0x27, 0xce, 0x54, 0x58, 0x37,
	0xc3, 0xa0, 0xbb, 0x30, 0x47, 0x5b, 0x6f, 0x89, 0x27, 0xb8, 0x5e, 0x32, 0x67, 0xd6, 0x2b, 0x8d,
	0x0b, 0x79, 0xf8, 0x37, 0x82, 0x32, 0xdc, 0x26, 0x5f, 0x4b, 0x84, 0x9b, 0x21, 0xd1, 0x2d, 0x98,
	0x7b, 0xc3, 0x02, 0x12, 0xf9, 0x5c, 0x9f, 0x91, 0x4a, 0x28, 0xaf, 0xf4, 0x58, 0x6e, 0xb9, 0x19,
	0x04, 0xdd, 0x84, 0x72, 0x9b, 0xd1, 0x5e, 0xcc, 0xf5, 0xd3, 0x12, 0x7c, 0x36, 0x0f, 0xde, 0x4d,
	0x76, 0x5c, 0x05, 0x40, 0xff, 0x83, 0xf9, 0x2e, 0xe1, 0x1c, 0xb7, 0x09, 0xd7, 0x67, 0x25, 0xd8,
	0xc8, 0x83, 0x77, 0x3a, 0x38, 0x8a, 0x48, 0xf8, 0x34, 0x85, 0xb8, 0x7d, 0x2c, 0x7a, 0x06, 0xcb,
	0x21, 0xc1, 0x3e, 0x61, 0x2d, 0x8a, 0x99, 0xdf, 0x4c, 0x9d, 0xc4, 0xf5, 0xb2, 0x34, 0x71, 0x29,
	0x6f, 0x62, 0x6f, 0x00, 0x73, 0x25, 0xca, 0x45, 0xe1, 0xa8, 0x88, 0xa3, 0x07, 0x50, 0x8d, 0xa8,
	0x08, 0xde, 0x04, 0x5e, 0x1a, 0x5a, 0x7d, 0x4e, 0x5a, 0xd2, 0xf3, 0x96, 0x9e, 0xe5, 0x00, 0xee,
	0x30, 0x1c, 0xed, 0x40, 0xed, 0x10, 0x87, 0x21, 0x11, 0xcd, 0x90, 0xf8, 0x6d, 0xc2, 0xb8, 0x3e,
	0x2f, 0x0d, 0x5c, 0xb4, 0x87, 0x9f, 0x80, 0xfd, 0x4a, 0xa2, 0xf6, 0x24, 0xc8, 0xad, 0x1e, 0xe6,
	0x56, 0xdc, 0xb2, 0x60, 0x49, 0x85, 0xeb, 0x89, 0x5f, 0x90, 0x44, 0xd6, 0x03, 0xa8, 0x28, 0xcc,
	0x5e, 0xc0, 0x05, 0x72, 0x60, 0x5e, 0x05, 0x96, 0xeb, 0x9a, 0x64, 0x9c, 0x18, 0xfd, 0x3e, 0xc8,
	0x7a, 0x0a, 0xcb, 0x5b, 0x3d, 0xd1, 0x21, 0x91, 0x48, 0xce, 0xde, 0xcf, 0x55, 0x03, 0xe6, 0x7b,
	0x9c, 0xb0, 0x08, 0x77, 0x89, 0x22, 0xeb, 0xaf, 0x93, 0xbd, 0x18, 0x73, 0x7e, 0x48, 0x99, 0x2f,
	0x13, 0x76, 0xc1, 0xed, 0xaf, 0xad, 0x36, 0x18, 0x69, 0xd2, 0x0f, 0x27, 0x8e, 0xb2, 0x7a, 0x19,
	0xc0, 0xa3, 0x61, 0x48, 0x3c, 0x99, 0xec, 0xa9, 0xdd, 0x9c, 0x04, 0x2d, 0xc1, 0xcc, 0x3e, 0x39,
	0x52, 0x46, 0x93, 0x7f, 0xd1, 0x79, 0x98, 0x4b, 0x78, 0x9b, 0x81, 0xaf, 0xcf, 0x48, 0x69, 0x39,
	0x59, 0x3e, 0xf1, 0x2d, 0x1f, 0xce, 0xef, 0x12, 0xf1, 0x6f, 0xb3, 0xec, 0x83, 0x9e, 0xb8, 0xf5,
	0x1f, 0xd1, 0xe4, 0x8c, 0x96, 0xf2, 0x46, 0xd1, 0x39, 0x28, 0x7b, 0x3d, 0xc6, 0x29, 0xcb, 0xc8,
	0xd2, 0x95, 0xf5, 0x05, 0xac, 0x2a, 0xa2, 0x9d, 0xbe, 0x15, 0x19, 0x54, 0x13, 0x2a, 0x03, 0xbb,
	0x69, 0x5c, 0x17, 0xdc, 0xbc, 0xc8, 0xfa, 0x4d, 0x83, 0xea, 0xd0, 0x21, 0x3f, 0xa3, 0x13, 0xd0,
	0x0a, 0xcc, 0x1e, 0x24, 0xb5, 0x47, 0x3f, 0x2d, 0xc5, 0xe9, 0x02, 0xdd, 0x80, 0xc5, 0x98, 0xb0,
	0x6e, 0xc0, 0x79, 0x40, 0xa3, 0x26, 0x23, 0xd8, 0xd7, 0x67, 0x4d, 0x6d, 0x7d, 0xd6, 0xad, 0x0d,
	0xc4, 0x2e, 0xc1, 0x3e, 0xba, 0x09, 0x4b, 0x39, 0xe0, 0x21, 0x0b, 0x04, 0xd1, 0xcb, 0x12, 0x99,
	0x33, 0xf0, 0x2a, 0x11, 0x5b, 0x3e, 0x9c, 0x1d, 0xba, 0x85, 0xbc, 0xfd, 0xfd, 0x41, 0x81, 0xd2,
	0x86, 0x9f, 0x73, 0xf6, 0x86, 0x0a, 0x8a, 0xd4, 0xc0, 0xcf, 0xa5, 0x21, 0x3f, 0xff, 0xa5, 0xc1,
	0x99, 0xfc, 0xb3, 0x1b, 0x2b, 0xcc, 0x85, 0x91, 0xbb, 0x08, 0x0b, 0x5e, 0x07, 0x47, 0x6d, 0xc2,
	0x89, 0x50, 0x4e, 0x1a, 0x08, 0x92, 0x77, 0xd1, 0x25, 0x02, 0xfb, 0x58, 0x60, 0xe5, 0xaa, 0xfe,
	0x1a, 0x7d, 0x09, 0x15, 0x8f, 0x11, 0x2c, 0x48, 0x33, 0xe9, 0x3d, 0xfa, 0x7c, 0x41, 0x9d, 0x7f,
	0x91, 0x35, 0x26, 0x17, 0x52, 0x78, 0x22, 0x48, 0x94, 0x7b, 0xb1, 0xdf, 0x57, 0x5e, 0x98, 0xae,
	0x9c, 0xc2, 0x13, 0x81, 0xe5, 0xc2, 0x05, 0xe9, 0xdc, 0x89, 0x39, 0x7c, 0x0f, 0xca, 0xa9, 0xb7,
	0x54, 0xab, 0x98, 0xe2, 0x5a, 0x05, 0x6e, 0x7c, 0xa8, 0xc2, 0xdc, 0x4e, 0x8a, 0x40, 0x02, 0x66,
	0xf7, 0x68, 0x3b, 0x88, 0xd0, 0xb5, 0x51, 0xdd, 0x09, 0x75, 0xc5, 0x38, 0x37, 0x76, 0xea, 0x47,
	0x49, 0xa3, 0xb6, 0xec, 0x77, 0x5b, 0xf3, 0xad, 0x32, 0x9c, 0x86, 0x53, 0xe8, 0xd4, 0x4f, 0xbf,
	0xff, 0xf9, 0xbe, 0x74, 0xc9, 0xd2, 0x9d, 0x83, 0x46, 0x36, 0x3f, 0x38, 0x38, 0x67, 0x6b, 0x53,
	0xab, 0x23, 0x0a, 0xd5, 0xb4, 0xce, 0xa8, 0x8a, 0x86, 0xae, 0x8f, 0xb1, 0x4f, 0x68, 0xc1, 0x85,
	0xf4, 0xa6, 0xe4, 0x34, 0xea, 0xc3, 0x9c, 0xa9, 0x05, 0xe7, 0x38, 0xf0, 0x4f, 0xd0, 0x77, 0x50,
	0x1b, 0x22, 0xe4, 0xa8, 0xc0, 0x56, 0x21, 0xc7, 0x9a, 0xe4, 0x58, 0xad, 0x2f, 0x4f, 0xe0, 0x40,
	0xef, 0x35, 0x58, 0x9e, 0x50, 0x38, 0x51, 0x7d, 0xf4, 0x5a, 0xc5, 0xd5, 0xb5, 0x90, 0xf8, 0xff,
	0x92, 0xb8, 0x51, 0xdf, 0xc8, 0x13, 0xf3, 0xd4, 0x82, 0x73, 0x3c, 0xa8, 0x09, 0x27, 0xce, 0xf1,
	0x3e, 0x39, 0x3a, 0x71, 0x8e, 0x55, 0xf2, 0x9f, 0x20, 0x0f, 0x56, 0x26, 0xf0, 0x7d, 0xa6, 0xab,
	0xab, 0x13, 0xa0, 0x23, 0xa8, 0xa6, 0x93, 0x4b, 0x16, 0x4a, 0xb3, 0x20, 0x94, 0xfd, 0x26, 0x68,
	0x5c, 0x2a, 0x40, 0xa4, 0x76, 0xac, 0x1b, 0x92, 0xee, 0x2a, 0xba, 0x52, 0x14, 0x4d, 0x87, 0xa4,
	0xa3, 0x12, 0x01, 0xd8, 0x25, 0x9f, 0xc0, 0x3b, 0xa9, 0x97, 0x66, 0xb9, 0x83, 0x8a, 0x73, 0xe7,
	0x67, 0x4d, 0xf2, 0x28, 0x27, 0xa2, 0x1b, 0xa3, 0x3c, 0x05, 0x8d, 0xcc, 0xf8, 0xf8, 0x6b, 0xcc,
	0xe2, 0x8a, 0x3e, 0x3d, 0xae, 0xdf, 0xc3, 0x99, 0xa4, 0xb4, 0x4e, 0x4d, 0xe5, 0xb5, 0x02, 0x8f,
	0x24, 0xca, 0x59, 0x50, 0xd1, 0xc4, 0x7c, 0x8e, 0xa0, 0x92, 0x80, 0x1e, 0xab, 0x09, 0xf0, 0x13,
	0x5d, 0xab, 0xd4, 0xac, 0x75, 0x49, 0x61, 0x21, 0xb3, 0x30, 0x90, 0xd9, 0x88, 0xc9, 0x00, 0x12,
	0xbe, 0xdd, 0x74, 0x8a, 0x9c, 0x4e, 0x37, 0x34, 0xe4, 0x7e, 0xcb, 0x09, 0x93, 0x9a, 0xf2, 0x5e,
	0xd3, 0xb3, 0x47, 0xcd, 0xaa, 0x02, 0xce, 0xe5, 0x86, 0x83, 0x41, 0xcf, 0x2e, 0xf6, 0xe7, 0x7f,
	0x0a, 0x02, 0x3a, 0xdc, 0xef, 0x27, 0x7b, 0x36, 0x7b, 0x2e, 0xbf, 0x6a, 0x80, 0xc6, 0x66, 0x12,
	0x8e, 0xd6, 0x47, 0x4d, 0x17, 0xcd, 0x2d, 0xc6, 0xd5, 0x8f, 0x66, 0x95, 0x3c, 0xc0, 0x4b, 0x79,
	0x80, 0xe7, 0xc3, 0x7e, 0x9f, 0x94, 0x59, 0xaf, 0x6f, 0xa1, 0xfa, 0xf4, 0xec, 0xeb, 0xe7, 0x9d,
	0x00, 0x34, 0xde, 0x8b, 0xd0, 0xcd, 0xb1, 0x99, 0xb8, 0xa8, 0x5f, 0x4d, 0x2b, 0x30, 0xc6, 0x24,
	0x8f, 0x6d, 0x7f, 0x28, 0xbd, 0xdb, 0xfa, 0xa5, 0x84, 0x4e, 0x60, 0xf5, 0x99, 0xe4, 0x31, 0x15,
	0xc0, 0xdc, 0x7a, 0xfe, 0xc4, 0x3c, 0x68, 0x58, 0x4d, 0xb8, 0xfa, 0xa2, 0x43, 0x4c, 0xb5, 0x99,
	0x74, 0x2d, 0xca, 0xb8, 0xf9, 0x5f, 0x73, 0x87, 0x46, 0x82, 0x05, 0xad, 0x9e, 0xa0, 0x8c, 0xa3,
	0xeb, 0x1d, 0x21, 0x62, 0xbe, 0xe9, 0x38, 0x1f, 0xfb, 0x64, 0x35, 0x56, 0x3a, 0x24, 0x0c, 0xe9,
	0x57, 0x83, 0x8d, 0x04, 0xd7, 0x98, 0x69, 0xd8, 0x1b, 0x46, 0xed, 0x4e, 0xe3, 0xbe, 0xbd, 0x61,
	0x6f, 0xd8, 0x77, 0x36, 0xef, 0xdf, 0xbd, 0x77, 0xa7, 0xae, 0x69, 0x8d, 0x25, 0x1c, 0xc7, 0xa1,
	0xfa, 0x64, 0x70, 0xde, 0x72, 0x1a, 0x6d, 0x8e, 0x49, 0x5e, 0x9f, 0x85, 0x45, 0x58, 0xd8, 0xc6,
	0x3c, 0xf0, 0x92, 0x83, 0xa1, 0xd2, 0xbc, 0xd6, 0x5a, 0x84, 0x6a, 0x5e, 0x74, 0x8a, 0x6d, 0xc3,
	0x35, 0x75, 0x78, 0x4e, 0xd8, 0x01, 0x61, 0xfd, 0x0b, 0xfa, 0xd4, 0xeb, 0x75, 0x49, 0x94, 0x7e,
	0x9e, 0xa2, 0xb5, 0xec, 0x0a, 0xc3, 0xc7, 0x73, 0x7c, 0xea, 0xf1, 0xd7, 0x73, 0x4a, 0xa7, 0x55,
	0x96, 0xae, 0xbd, 0xfb, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x46, 0x6b, 0x13, 0xe6, 0xc3, 0x0f,
	0x00, 0x00,
}
